/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */
package form.dialog.test;

import communication.Operation;
import communication.Receiver;
import communication.Request;
import communication.Response;
import communication.Sender;
import controller.Communication;
import domain.Odgovor;
import domain.Pitanje;
import domain.PitanjeTest;
import domain.Test;
import java.awt.Color;
import java.awt.Container;
import java.net.Socket;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.BorderFactory;
import javax.swing.JCheckBox;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.SwingConstants;
import javax.swing.border.Border;
import session.LocalStorage;

/**
 *
 * @author Vuk
 */
public class TestModel extends javax.swing.JDialog {

    /**
     * Creates new form TestModel1
     */
    private LocalStorage localStorage = LocalStorage.getInstance();
    private final Test test;
    
    public TestModel(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        test = (Test) localStorage.getItemFromHashMap("Test");
        populateForm();
        preparePanels();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        lblAutor = new javax.swing.JLabel();
        lblNaziv = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txtMaksBrojPoena = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Segoe UI", 2, 12)); // NOI18N
        jLabel1.setText("Naziv autora:");

        lblAutor.setFont(new java.awt.Font("Segoe UI", 2, 12)); // NOI18N
        lblAutor.setText("Autor");

        lblNaziv.setFont(new java.awt.Font("Segoe UI", 3, 18)); // NOI18N
        lblNaziv.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblNaziv.setText("Naziv testa");

        jLabel2.setText("Maksimalan broj poena:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 152, Short.MAX_VALUE)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblAutor, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(lblNaziv, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtMaksBrojPoena, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(lblAutor))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblNaziv)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtMaksBrojPoena, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(470, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel lblAutor;
    private javax.swing.JLabel lblNaziv;
    private javax.swing.JTextField txtMaksBrojPoena;
    // End of variables declaration//GEN-END:variables

    private void preparePanels() {
        setTitle("Model testa");
        setLayout(null);
        Border br = BorderFactory.createLineBorder(Color.black);
        Container c = getContentPane();
        int y = 100;
        for(Pitanje pitanje:test.getPitanja()){
            JPanel panelPitanje = new JPanel();
            panelPitanje.setLayout(null);
            
            JLabel nazivPitanja = new JLabel(pitanje.getSadrzaj());
            nazivPitanja.setLayout(null);
            nazivPitanja.setBounds(8,-80,370,200); 
            panelPitanje.add(nazivPitanja);
            
            JPanel panelOdgovor = new JPanel();
            panelOdgovor.setLayout(null);
            int y1 = 5;
            for(Odgovor odgovor:pitanje.getOdgovori()){
                JCheckBox nazivOdgovor = new JCheckBox(odgovor.getSadrzaj(),false);
                nazivOdgovor.setLayout(null);
                nazivOdgovor.setBounds(15, y1, 200, 17);
                nazivOdgovor.setEnabled(false);
                panelOdgovor.add(nazivOdgovor);
                y1+=17;
            }
            
            panelOdgovor.setBounds(10,40,300,120);
            panelOdgovor.setBorder(br);
            
            int brojPoenaPitanja = uzmiBrojPoenaPitanja(pitanje);
            JLabel brojPoena = new JLabel("Broj poena__ / " + brojPoenaPitanja,SwingConstants.RIGHT);
            brojPoena.setLayout(null);
            brojPoena.setBounds(15,175,340,15);
            panelPitanje.add(brojPoena);
            
            panelPitanje.add(panelOdgovor);
       
            panelPitanje.setBounds(10,y,370,200);
            panelPitanje.setBorder(br);     
            c.add(panelPitanje);
            y+=210;
        }
    }

    private void populateForm() {
        lblAutor.setText(test.getAutor());
        lblNaziv.setText(test.getNaziv());
        txtMaksBrojPoena.setEnabled(false);
        txtMaksBrojPoena.setText(Integer.toString(test.getMaxBrojPoena()));
    }

    private int uzmiBrojPoenaPitanja(Pitanje pitanje) {
        try {
            List<PitanjeTest> pitanjaTesta = (List<PitanjeTest>)Communication.getInstance().getPitanjaTest();
            
            for(PitanjeTest pt:pitanjaTesta){
                if(pt.getPitanje().getPitanjeId().equals(pitanje.getPitanjeId()) && pt.getTest().getTestId().equals(test.getTestId())){
                    return pt.getBrojPoena();
                }
            }
            return 0;
        } catch (Exception ex) {
            Logger.getLogger(TestModel.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        return 0;
    }
}
