/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */
package form.dialog.student;

import controller.Communication;
import domain.Pol;
import domain.Polaganje;
import domain.RezultatPolaganja;
import domain.Student;
import form.dialog.polaganje.PolaganjeViewForm;
import form.util.FormView;
import form.util.ViewForm;
import java.time.LocalDate;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import session.LocalStorage;

/**
 *
 * @author Vuk
 */
public class StudentForm extends javax.swing.JDialog implements ViewForm {

    /**
     * Creates new form CreateStudentForm
     */
    private final LocalStorage localStorage = LocalStorage.getInstance();
    private int mode;
    public static boolean visibility = false;
    
    public StudentForm(java.awt.Frame parent, boolean modal,int mode) {
        super(parent, modal);
        initComponents();
        this.mode = mode;
        prepareForm();   
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        txtIme = new javax.swing.JTextField();
        jlblTitle = new javax.swing.JLabel();
        jlblIme = new javax.swing.JLabel();
        jlblPrezime = new javax.swing.JLabel();
        txtPrezime = new javax.swing.JTextField();
        jlblPol = new javax.swing.JLabel();
        jrbMusko = new javax.swing.JRadioButton();
        jrbZensko = new javax.swing.JRadioButton();
        jlblDatumRodjenja = new javax.swing.JLabel();
        jcmbDan = new javax.swing.JComboBox<>();
        jcmbMesec = new javax.swing.JComboBox<>();
        btnSacuvaj = new javax.swing.JButton();
        jlblId = new javax.swing.JLabel();
        txtId = new javax.swing.JTextField();
        jcmbGodina = new javax.swing.JComboBox<>();
        lblErrorIme = new javax.swing.JLabel();
        lblErrorPrezime = new javax.swing.JLabel();
        lblErrorBrojIndeksa = new javax.swing.JLabel();
        jlblBrojIndeksa = new javax.swing.JLabel();
        txtBrojIndeksa = new javax.swing.JTextField();
        btnIzmena = new javax.swing.JButton();
        lblPolaganja = new javax.swing.JLabel();
        cmbPolaganja = new javax.swing.JComboBox<>();
        btnPregledPolaganja = new javax.swing.JButton();
        btnIzbaciPolaganje = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jlblTitle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jlblTitle.setText("jLabel4");

        jlblIme.setText("Ime");

        jlblPrezime.setText("Prezime");

        jlblPol.setText("Pol");

        jrbMusko.setText("Musko");

        jrbZensko.setText("Zensko");

        jlblDatumRodjenja.setText("Datum rodjenja");

        jcmbDan.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jcmbDan.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "" }));

        jcmbMesec.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jcmbMesec.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { " " }));

        btnSacuvaj.setText("Sacuvaj");
        btnSacuvaj.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSacuvajActionPerformed(evt);
            }
        });

        jlblId.setText("Id");

        txtId.setEditable(false);
        txtId.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N

        jcmbGodina.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jcmbGodina.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { " " }));

        lblErrorIme.setFont(new java.awt.Font("Segoe UI", 3, 12)); // NOI18N
        lblErrorIme.setForeground(new java.awt.Color(255, 51, 51));
        lblErrorIme.setText("jLabel1");

        lblErrorPrezime.setFont(new java.awt.Font("Segoe UI", 3, 12)); // NOI18N
        lblErrorPrezime.setForeground(new java.awt.Color(255, 0, 0));
        lblErrorPrezime.setText("jLabel2");

        lblErrorBrojIndeksa.setFont(new java.awt.Font("Segoe UI", 3, 12)); // NOI18N
        lblErrorBrojIndeksa.setForeground(new java.awt.Color(255, 51, 51));
        lblErrorBrojIndeksa.setText("jLabel1");

        jlblBrojIndeksa.setText("Broj indeksa");

        btnIzmena.setText("Omoguci izmenu");
        btnIzmena.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnIzmenaActionPerformed(evt);
            }
        });

        lblPolaganja.setText("jLabel1");

        btnPregledPolaganja.setText("Pregled polaganja");
        btnPregledPolaganja.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPregledPolaganjaActionPerformed(evt);
            }
        });

        btnIzbaciPolaganje.setText("Izbaci polaganje");
        btnIzbaciPolaganje.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnIzbaciPolaganjeActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jlblTitle, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnSacuvaj, javax.swing.GroupLayout.PREFERRED_SIZE, 310, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jlblIme, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(49, 49, 49)
                                .addComponent(txtIme, javax.swing.GroupLayout.PREFERRED_SIZE, 199, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jlblPrezime, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(30, 30, 30)
                                .addComponent(txtPrezime, javax.swing.GroupLayout.PREFERRED_SIZE, 203, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(lblErrorIme, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(lblErrorPrezime, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addGroup(layout.createSequentialGroup()
                                                .addGap(6, 6, 6)
                                                .addComponent(jlblId, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addComponent(jlblBrojIndeksa, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                        .addGap(18, 18, Short.MAX_VALUE)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(txtId, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(txtBrojIndeksa, javax.swing.GroupLayout.PREFERRED_SIZE, 198, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addComponent(lblErrorBrojIndeksa, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 294, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jlblPol, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jrbMusko, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jrbZensko, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(btnIzmena)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(27, 27, 27)
                                .addComponent(btnPregledPolaganja, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(btnIzbaciPolaganje, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jlblDatumRodjenja, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jcmbDan, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lblPolaganja, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGap(12, 12, 12)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jcmbMesec, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jcmbGodina, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(cmbPolaganja, javax.swing.GroupLayout.PREFERRED_SIZE, 199, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(17, Short.MAX_VALUE)
                .addComponent(jlblTitle)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 20, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jlblId)
                    .addComponent(txtId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED, 19, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jlblBrojIndeksa)
                    .addComponent(txtBrojIndeksa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 19, Short.MAX_VALUE)
                .addComponent(lblErrorBrojIndeksa)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jlblIme)
                    .addComponent(txtIme, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lblErrorIme)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jlblPrezime)
                    .addComponent(txtPrezime, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lblErrorPrezime, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jlblPol)
                    .addComponent(jrbMusko)
                    .addComponent(jrbZensko))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jlblDatumRodjenja)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jcmbDan, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jcmbMesec, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jcmbGodina, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(16, 16, 16)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblPolaganja)
                    .addComponent(cmbPolaganja, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnPregledPolaganja)
                    .addComponent(btnIzbaciPolaganje))
                .addGap(33, 33, 33)
                .addComponent(btnIzmena, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnSacuvaj, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(9, 9, 9))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnSacuvajActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSacuvajActionPerformed
        // TODO add your handling code here:
        setErrors();
        try {
            Object object;
            Student student = zapamtiStudenta((Student) localStorage.getItemFromHashMap("Student"));
            List<Polaganje> polaganja = (List<Polaganje>) localStorage.getItemFromHashMap("PolaganjaStudenta");
            object = Communication.getInstance().updateStudent(student);
            if (!(object instanceof String)) {
                if((boolean)object){
                    JOptionPane.showMessageDialog(this, "Sistem je zapamtio studenta");
                    if(polaganja!=null){
                        for (Polaganje polaganje : polaganja) {
                            try {
                                RezultatPolaganja rp = new RezultatPolaganja();
                                rp.setPolaganje(polaganje);
                                rp.setStudent(student);
                                rp.setBrojPoena(0);
                                rp.setOcena(5);
                                object = Communication.getInstance().addRezultatPolaganja(rp);
                                if (!(object instanceof String)) {
                                    if((boolean)object){
                                        System.out.println("Uspesno dodato!!");
                                    }
                                    else{
                                        System.out.println("Polaganje je vec dodato studentu!!");
                                    }
                                } else {
                                    System.out.println((String)object);
                                }
                            } catch (Exception ex) {
                                System.out.println(ex.getMessage());
                            }
                        }
                    }
                    this.dispose();
                }
                else{
                    JOptionPane.showMessageDialog(this, "Sistem ne moze da zapamti studenta");
                }
            } else {
                JOptionPane.showMessageDialog(this, "Sistem ne moze da zapamti studenta");
                setTextErrors((String)object);
            }
        } catch (Exception ex) {
            System.out.println(ex.getMessage());
        }
    }//GEN-LAST:event_btnSacuvajActionPerformed

    private void btnIzmenaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnIzmenaActionPerformed
        // TODO add your handling code here:
        prepareEditForm();
        this.mode = FormView.FORM_EDIT_MODE;
    }//GEN-LAST:event_btnIzmenaActionPerformed

    private void btnPregledPolaganjaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPregledPolaganjaActionPerformed
        // TODO add your handling code here:
        PolaganjeViewForm polaganjeDialog;
        if(mode==FormView.FORM_ADD_MODE){
            polaganjeDialog = new PolaganjeViewForm(null,true,FormView.FORM_ADD_MODE);
        }
        else{
            polaganjeDialog = new PolaganjeViewForm(null,true,FormView.FORM_EDIT_MODE);
        }
        
        polaganjeDialog.setVisible(true);
        
        List<Polaganje> polaganja = (List<Polaganje>) localStorage.getItemFromHashMap("PolaganjaStudenta");
        
        cmbPolaganja.setModel(new DefaultComboBoxModel(polaganja.toArray()));
    }//GEN-LAST:event_btnPregledPolaganjaActionPerformed

    private void btnIzbaciPolaganjeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnIzbaciPolaganjeActionPerformed
        try {
            // TODO add your handling code here:
            Polaganje polaganje = (Polaganje) cmbPolaganja.getSelectedItem();
            Student student = (Student) localStorage.getItemFromHashMap("Student");
            
            
            cmbPolaganja.removeItem(polaganje);
             List<Polaganje> polaganja = (List<Polaganje>) localStorage.getItemFromHashMap("PolaganjaStudenta");
            polaganja.remove(polaganje);
            localStorage.addItemsInHashMap("PolaganjaStudenta", polaganja);
            JOptionPane.showMessageDialog(this, "Polaganje je uspesno izbaceno");
 
        } catch (Exception ex) {
            System.out.println(ex.getMessage());
            JOptionPane.showMessageDialog(this, "Polaganje nije izbaceno");
        }
       
    }//GEN-LAST:event_btnIzbaciPolaganjeActionPerformed

   

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnIzbaciPolaganje;
    private javax.swing.JButton btnIzmena;
    private javax.swing.JButton btnPregledPolaganja;
    private javax.swing.JButton btnSacuvaj;
    private javax.swing.JComboBox<Polaganje> cmbPolaganja;
    private javax.swing.JComboBox<String> jcmbDan;
    private javax.swing.JComboBox<String> jcmbGodina;
    private javax.swing.JComboBox<String> jcmbMesec;
    private javax.swing.JLabel jlblBrojIndeksa;
    private javax.swing.JLabel jlblDatumRodjenja;
    private javax.swing.JLabel jlblId;
    private javax.swing.JLabel jlblIme;
    private javax.swing.JLabel jlblPol;
    private javax.swing.JLabel jlblPrezime;
    private javax.swing.JLabel jlblTitle;
    private javax.swing.JRadioButton jrbMusko;
    private javax.swing.JRadioButton jrbZensko;
    private javax.swing.JLabel lblErrorBrojIndeksa;
    private javax.swing.JLabel lblErrorIme;
    private javax.swing.JLabel lblErrorPrezime;
    private javax.swing.JLabel lblPolaganja;
    private javax.swing.JTextField txtBrojIndeksa;
    private javax.swing.JTextField txtId;
    private javax.swing.JTextField txtIme;
    private javax.swing.JTextField txtPrezime;
    // End of variables declaration//GEN-END:variables

    private boolean kreirajStudenta() {
        try {
            Student s =  new Student();
            s.setBrojIndeksa("0000-0000");
            s.setDatumRodjenja(LocalDate.now());
            s.setIme("");
            s.setPol(Pol.Musko);
            s.setPrezime("");
            Student student = Communication.getInstance().createStudent(s);
            if(student == null){
                JOptionPane.showMessageDialog(this, "Sistem ne moze da kreira studenta");     
                return false;
            }
            else{
                txtId.setText(Integer.toString(student.getId()));
                
                localStorage.addItemsInHashMap("Student", student);
                JOptionPane.showMessageDialog(this, "Sistem je kreirao studenta");
                return true;
            }
        } catch (Exception ex) {
            System.out.println(ex.getMessage());
        }
        return false;
    }

    private Student zapamtiStudenta(Student student) {
        String brojIndeksa = txtBrojIndeksa.getText();
        String ime = txtIme.getText();
        String prezime = txtPrezime.getText();
        Pol pol = null;
        if(jrbMusko.isSelected()){
            pol = Pol.Musko;
        }
        else if(jrbZensko.isSelected()){
            pol = Pol.Zensko;
        }
        
        int dan = Integer.parseInt((String) jcmbDan.getSelectedItem());
        int mesec = Integer.parseInt((String) jcmbMesec.getSelectedItem());
        int godina = Integer.parseInt((String) jcmbGodina.getSelectedItem());        
        LocalDate date = LocalDate.of(godina, mesec, dan);
 
        student.setBrojIndeksa(brojIndeksa);
        student.setIme(ime);
        student.setPrezime(prezime);
        student.setPol(pol);
        student.setDatumRodjenja(date);

        return student; 
    }
       
     private void ucitajStudenta(Student student) {
        txtId.setText(Integer.toString(student.getId()));
        txtIme.setText(student.getIme());
        txtPrezime.setText(student.getPrezime());
        txtBrojIndeksa.setText(student.getBrojIndeksa());
        if(student.getPol() == Pol.Musko){
            jrbMusko.setSelected(true);
        }
        else if(student.getPol() == Pol.Zensko){
            jrbZensko.setSelected(true);
        }
        
        int dan = student.getDatumRodjenja().getDayOfMonth();
        int mesec = student.getDatumRodjenja().getMonthValue();
        int godina = student.getDatumRodjenja().getYear();
        
        for(int i=1;i<32;i++){
            if(Integer.parseInt(jcmbDan.getItemAt(i)) == dan){
                jcmbDan.setSelectedIndex(i);
            }
        }
        for(int i=1;i<13;i++){
            if(Integer.parseInt(jcmbMesec.getItemAt(i)) == mesec){
                jcmbMesec.setSelectedIndex(i);
            }
        }
        for(int i=1;i<123;i++){
            if(Integer.parseInt(jcmbGodina.getItemAt(i)) == godina){
                jcmbGodina.setSelectedIndex(i);
            }
        }
    }

    private void prepareForm() {
        lblErrorIme.setVisible(false);
        lblErrorPrezime.setVisible(false);
        lblErrorBrojIndeksa.setVisible(false);
        
        for(int i=1;i<=31;i++){
            jcmbDan.addItem(Integer.toString(i));
        }
        jcmbDan.setSelectedIndex(20);
        
        for(int i=1;i<=12;i++){
            jcmbMesec.addItem(Integer.toString(i));
        }
        jcmbMesec.setSelectedIndex(5);
        for(int i=1900;i<=2023;i++){
            jcmbGodina.addItem(Integer.toString(i));
        }
        jcmbGodina.setSelectedIndex(40);
        
        
        List<Polaganje> polaganja = (List<Polaganje>) localStorage.getItemFromHashMap("PolaganjaStudenta");
        if(polaganja!=null && mode!=FormView.FORM_ADD_MODE){
            cmbPolaganja.setModel(new DefaultComboBoxModel(polaganja.toArray()));
        }
        else{
            cmbPolaganja.removeAllItems();
        }
    
        if(mode==FormView.FORM_ADD_MODE){
            if(kreirajStudenta()){
                prepareAddForm();
            }
            else{
                visibility = false;
            }
        }
        else if(mode==FormView.FORM_VIEW_MODE){
           prepareViewForm();
           ucitajStudenta((Student) LocalStorage.getInstance().getItemFromHashMap("Student"));
        }
        else if(mode==FormView.FORM_EDIT_MODE){
            prepareEditForm();
            ucitajStudenta((Student) LocalStorage.getInstance().getItemFromHashMap("Student"));            
        }
        else if(mode==FormView.FORM_REMOVE_MODE){
           prepareViewForm();
           btnIzmena.setVisible(false);
           btnPregledPolaganja.setVisible(false);
           ucitajStudenta((Student) LocalStorage.getInstance().getItemFromHashMap("Student"));
        }
    }

    public void prepareAddForm(){
        visibility = true;
        jlblTitle.setText("Kreiranje studenta");
        btnSacuvaj.setVisible(true);
        txtId.setEditable(false);
        txtIme.setEditable(true);
        txtBrojIndeksa.setEditable(true);
        txtPrezime.setEditable(true);
        jrbMusko.setEnabled(true);
        jrbMusko.setSelected(true);
        jrbZensko.setEnabled(true);
        jcmbDan.setEnabled(true);
        jcmbMesec.setEnabled(true);
        jcmbGodina.setEnabled(true);   
        btnIzmena.setVisible(false);
        btnPregledPolaganja.setVisible(true);
        btnIzbaciPolaganje.setVisible(true);
        lblPolaganja.setText("Dodaj studenta u polaganja");
    }
    
    public void prepareViewForm(){
        jlblTitle.setText("Prikazivanje studenta");
        btnSacuvaj.setVisible(false);
        txtId.setEditable(false);
        txtIme.setEditable(false);
        txtBrojIndeksa.setEditable(false);
        txtPrezime.setEditable(false);
        jrbMusko.setEnabled(false);
        jrbZensko.setEnabled(false);
        jcmbDan.setEnabled(false);
        jcmbMesec.setEnabled(false);
        jcmbGodina.setEnabled(false);
        btnIzmena.setVisible(true);
        btnPregledPolaganja.setVisible(false);
        btnIzbaciPolaganje.setVisible(false);
        lblPolaganja.setText("Pregled polaganja studenta");
    }
    
    public void prepareEditForm(){
        jlblTitle.setText("Izmena podataka studenta");
        btnSacuvaj.setVisible(true);
        txtId.setEditable(false);
        txtIme.setEditable(true);
        txtBrojIndeksa.setEditable(true);
        txtPrezime.setEditable(true);
        jrbMusko.setEnabled(true);
        jrbZensko.setEnabled(true);
        jcmbDan.setEnabled(true);
        jcmbMesec.setEnabled(true);
        jcmbGodina.setEnabled(true);
        btnIzmena.setVisible(false);
        btnPregledPolaganja.setVisible(true);
        btnIzbaciPolaganje.setVisible(true);
        lblPolaganja.setText("Pregled polaganja studenta");
    }

    private void setErrors() {
        lblErrorBrojIndeksa.setVisible(false);
        lblErrorBrojIndeksa.setText("");
        lblErrorIme.setVisible(false);
        lblErrorIme.setText("");
        lblErrorPrezime.setVisible(false);
        lblErrorPrezime.setText("");
    }

    private void setTextErrors(String string) {
        String[] arrayExceptions = string.split(",");
        if(!arrayExceptions[0].equals(" ")){
            lblErrorPrezime.setVisible(true);
            lblErrorPrezime.setText(arrayExceptions[0]);
        }
        if(!arrayExceptions[1].equals(" ")){
            lblErrorIme.setVisible(true);
            lblErrorIme.setText(arrayExceptions[1]);
        }
        if(!arrayExceptions[2].equals(" ")){
            lblErrorBrojIndeksa.setVisible(true);
            lblErrorBrojIndeksa.setText(arrayExceptions[2]);
        }
    }

}
