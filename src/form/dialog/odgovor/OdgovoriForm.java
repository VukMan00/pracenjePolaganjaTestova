/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */
package form.dialog.odgovor;

import components.MyOdgovorTableModel;
import domain.Odgovor;
import domain.Pitanje;
import form.util.FormView;
import java.util.List;
import java.util.Objects;
import javax.swing.JOptionPane;
import session.LocalStorage;
import java.util.logging.Level;
import java.util.logging.Logger;
import controller.Communication;

/**
 *
 * @author Vuk
 */
public class OdgovoriForm extends javax.swing.JDialog {

    /**
     * Creates new form OdgovorForm
     */
    LocalStorage localStorage = LocalStorage.getInstance();
    private Pitanje pitanje;
    public OdgovoriForm(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        pitanje = (Pitanje) localStorage.getItemFromHashMap("Pitanje");
        populateTable();
       
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tblOdgovor = new javax.swing.JTable();
        lblTitle = new javax.swing.JLabel();
        btnDodajOdgovor = new javax.swing.JButton();
        btnIzmena = new javax.swing.JButton();
        btnIzbrisiOdgovor = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        tblOdgovor.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(tblOdgovor);

        lblTitle.setFont(new java.awt.Font("Segoe UI", 3, 12)); // NOI18N
        lblTitle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblTitle.setText("jLabel1");

        btnDodajOdgovor.setText("Dodaj odgovor");
        btnDodajOdgovor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDodajOdgovorActionPerformed(evt);
            }
        });

        btnIzmena.setText("Izmena odgovora");
        btnIzmena.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnIzmenaActionPerformed(evt);
            }
        });

        btnIzbrisiOdgovor.setText("Izbrisi odgovor");
        btnIzbrisiOdgovor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnIzbrisiOdgovorActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(42, 42, 42)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane1)
                    .addComponent(lblTitle, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnDodajOdgovor, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(27, 27, 27)
                        .addComponent(btnIzmena, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnIzbrisiOdgovor, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(73, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addComponent(lblTitle)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 317, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btnDodajOdgovor, javax.swing.GroupLayout.DEFAULT_SIZE, 40, Short.MAX_VALUE)
                    .addComponent(btnIzmena, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnIzbrisiOdgovor, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(42, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnDodajOdgovorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDodajOdgovorActionPerformed
        // TODO add your handling code here:
        OdgovorForm odgovorForm = new OdgovorForm(null,true,FormView.FORM_ADD_MODE);
        odgovorForm.setVisible(true);

        Odgovor odgovor = (Odgovor) localStorage.getItemFromHashMap("Odgovor");
        pitanje.getOdgovori().add(odgovor);
        localStorage.addItemsInHashMap("Odgovori", pitanje.getOdgovori());
        populateTable();
        localStorage.removeItemFromHashMap("Odgovor");
    }//GEN-LAST:event_btnDodajOdgovorActionPerformed

    private void btnIzmenaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnIzmenaActionPerformed
        // TODO add your handling code here:
        int selectedRow = tblOdgovor.getSelectedRow();
        if(selectedRow==-1){
            JOptionPane.showMessageDialog(this, "Niste izabrali pitanje");
        }
        else{
            Odgovor odgovor = ((MyOdgovorTableModel)tblOdgovor.getModel()).getOdgovori().get(selectedRow);
            localStorage.addItemsInHashMap("Odgovor", odgovor);
            OdgovorForm odgovorForm = new OdgovorForm(null,true,FormView.FORM_EDIT_MODE);
            odgovorForm.setVisible(true);
            odgovor = (Odgovor) localStorage.getItemFromHashMap("Odgovor");
            for(Odgovor o:pitanje.getOdgovori()){
                if(Objects.equals(o.getOdgovorId(), odgovor.getOdgovorId())){
                    o=odgovor;
                }
            }
            populateTable();
            localStorage.removeItemFromHashMap("Odgovor");
        }
    }//GEN-LAST:event_btnIzmenaActionPerformed

    private void btnIzbrisiOdgovorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnIzbrisiOdgovorActionPerformed
        // TODO add your handling code here:
        int option = JOptionPane.showConfirmDialog(this, "Da li ste sigurni da zelite da izbrisete odgovor?");
        if(option==0){
            int selectedRow = tblOdgovor.getSelectedRow();
            
            if(selectedRow==-1){
                JOptionPane.showMessageDialog(this, "Niste izabrali pitanje");
            }
            else{
                try {
                    Odgovor odgovor = ((MyOdgovorTableModel)tblOdgovor.getModel()).getOdgovori().get(selectedRow);
                    if(Communication.getInstance().deleteOdgovor(odgovor)){
                        JOptionPane.showMessageDialog(this, "Uspesno ste izbrisali odgovor");
                        ((MyOdgovorTableModel)tblOdgovor.getModel()).remove(odgovor);
                    }
                    else{
                        JOptionPane.showMessageDialog(this, "Neuspesno brisanje odgovora");
                    }
                } catch (Exception ex) {
                    System.out.println(ex.getMessage());
                }
            }
        }
    }//GEN-LAST:event_btnIzbrisiOdgovorActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnDodajOdgovor;
    private javax.swing.JButton btnIzbrisiOdgovor;
    private javax.swing.JButton btnIzmena;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblTitle;
    private javax.swing.JTable tblOdgovor;
    // End of variables declaration//GEN-END:variables

    private void populateTable() {
        tblOdgovor.setModel(new MyOdgovorTableModel(pitanje.getOdgovori()));
    }
    
    public void setTitleForPitanje(String text){
        lblTitle.setText(text);
    }
}
