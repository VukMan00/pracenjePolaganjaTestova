/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */
package form.dialog.polaganje;

import components.MyRezultatPolaganjaTableModel;
import components.MyStudentPolaganjaTableModel;
import domain.Polaganje;
import domain.RezultatPolaganja;
import domain.Student;
import java.time.LocalDate;
import java.util.ArrayList;
import java.util.List;
import session.LocalStorage;
import java.net.Socket;
import java.util.logging.Level;
import java.util.logging.Logger;
import communication.*;
import controller.Communication;
import java.io.IOException;
import javax.swing.JOptionPane;

/**
 *
 * @author Vuk
 */
public class PolaganjeStudenta extends javax.swing.JDialog {

    /**
     * Creates new form PolaganjeStudenta
     */
    private LocalStorage localStorage = LocalStorage.getInstance();

    public PolaganjeStudenta(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        populateTables();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tblProslaPolaganja = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblPredstojecaPolaganja = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        tblProslaPolaganja.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(tblProslaPolaganja);

        jLabel2.setFont(new java.awt.Font("Segoe UI", 3, 12)); // NOI18N
        jLabel2.setText("Prosla polaganja: ");

        jLabel3.setFont(new java.awt.Font("Segoe UI", 3, 12)); // NOI18N
        jLabel3.setText("Predstojeca polaganja:");

        tblPredstojecaPolaganja.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(tblPredstojecaPolaganja);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 877, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jScrollPane2))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(jLabel2)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 239, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(28, 28, 28)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 217, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable tblPredstojecaPolaganja;
    private javax.swing.JTable tblProslaPolaganja;
    // End of variables declaration//GEN-END:variables

    private void populateTables() {
        try {
            Student student = (Student) localStorage.getItemFromHashMap("Login");
            
            List<RezultatPolaganja> polaganjaStudenta = new ArrayList<>();
            List<RezultatPolaganja> rezultati = Communication.getInstance().getRezultatPolaganja();
            
            for (RezultatPolaganja rp : rezultati) {
                if (rp.getStudent().getId().equals(student.getId())) {
                    polaganjaStudenta.add(rp);
                }
            }
            
            List<RezultatPolaganja> proslaPolaganja = new ArrayList<>();
            List<RezultatPolaganja> predstojecaPolaganja = new ArrayList<>();
            
            for (RezultatPolaganja rezultatiPolaganja : polaganjaStudenta) {
                if (rezultatiPolaganja.getPolaganje().getDatum().isBefore(LocalDate.now())) {
                    proslaPolaganja.add(rezultatiPolaganja);
                } else if (rezultatiPolaganja.getPolaganje().getDatum().isAfter(LocalDate.now())) {
                    predstojecaPolaganja.add(rezultatiPolaganja);
                }
            }
            if(proslaPolaganja.size()!=0 && predstojecaPolaganja.size()!=0){
                JOptionPane.showMessageDialog(this, "Sistem je ucitao polaganja studenta");
                tblProslaPolaganja.setModel(new MyStudentPolaganjaTableModel(proslaPolaganja));
                tblPredstojecaPolaganja.setModel(new MyStudentPolaganjaTableModel(predstojecaPolaganja));
                this.setVisible(true);
            }
            else{
                JOptionPane.showMessageDialog(this,"Sistem ne moze da ucita polaganja studenta");
            }
        } catch (IOException ex) {
            Logger.getLogger(PolaganjeStudenta.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

}
