/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */
package form.dialog.polaganje;

import components.MyRezultatPolaganjaTableModel;
import domain.Polaganje;
import domain.RezultatPolaganja;
import domain.Student;
import java.net.Socket;
import java.util.ArrayList;
import java.util.List;
import java.util.Objects;
import javax.swing.JOptionPane;
import session.LocalStorage;
import controller.Communication;

/**
 *
 * @author Vuk
 */
public class RezultatiPolaganja extends javax.swing.JDialog{

    /**
     * Creates new form RezultatPolaganja
     */
    private final LocalStorage localStorage = LocalStorage.getInstance();
    private Socket socket;
    
    public RezultatiPolaganja(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        this.socket = socket;
        populateForm();
        populateTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tblRezultatPolaganja = new javax.swing.JTable();
        lblTitle = new javax.swing.JLabel();
        lblSala = new javax.swing.JLabel();
        btnSave = new javax.swing.JButton();
        lblNazivTesta = new javax.swing.JLabel();
        lblMaxBrojPoena = new javax.swing.JLabel();
        lblError = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        tblRezultatPolaganja.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(tblRezultatPolaganja);

        lblTitle.setFont(new java.awt.Font("Segoe UI", 3, 14)); // NOI18N
        lblTitle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblTitle.setText("jLabel1");

        lblSala.setFont(new java.awt.Font("Segoe UI", 3, 14)); // NOI18N
        lblSala.setText("jLabel1");

        btnSave.setText("Sacuvaj");
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });

        lblNazivTesta.setFont(new java.awt.Font("Segoe UI", 3, 14)); // NOI18N
        lblNazivTesta.setText("jLabel1");

        lblMaxBrojPoena.setFont(new java.awt.Font("Segoe UI", 3, 14)); // NOI18N
        lblMaxBrojPoena.setText("jLabel1");

        lblError.setFont(new java.awt.Font("Segoe UI", 2, 12)); // NOI18N
        lblError.setForeground(new java.awt.Color(255, 51, 0));
        lblError.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblError.setText("jLabel1");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblNazivTesta, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblMaxBrojPoena, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 598, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lblSala)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addComponent(lblError, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(btnSave, javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 598, Short.MAX_VALUE)))
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addContainerGap())))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addComponent(lblTitle)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lblSala)
                .addGap(23, 23, 23)
                .addComponent(lblNazivTesta)
                .addGap(18, 18, 18)
                .addComponent(lblMaxBrojPoena)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 295, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 22, Short.MAX_VALUE)
                .addComponent(lblError)
                .addGap(18, 18, 18)
                .addComponent(btnSave, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(20, 20, 20))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
        lblError.setVisible(false);
        lblError.setText("");
        try {            
            MyRezultatPolaganjaTableModel myRezultatPolaganjaTableModel = (MyRezultatPolaganjaTableModel)tblRezultatPolaganja.getModel();
            List<RezultatPolaganja> rezultatiPolaganja = myRezultatPolaganjaTableModel.getRezultatPolaganja();
            
            for(RezultatPolaganja rp:rezultatiPolaganja){
                Object object = Communication.getInstance().updateRezultatPolaganja(rp);
                if(!(object instanceof String)){
                    if((boolean)object){
                        System.out.println("Podaci su zapamceni");
                    }
                    else{
                        JOptionPane.showMessageDialog(this, "Podaci za studenta: " + rp.getStudent().getIme() + " " + rp.getStudent().getPrezime() + " " + "nisu zapamceni!");
                    }
                }
                else{
                    JOptionPane.showMessageDialog(this, "Podaci za studenta: " + rp.getStudent().getIme() + " " + rp.getStudent().getPrezime() + " " + "nisu zapamceni!");
                    lblError.setVisible(true);
                    lblError.setText((String)object);
                }
            }
            
            if(lblError.isVisible()){
                JOptionPane.showMessageDialog(this, "Niste uspesno zapamtili sve podatke!");
            }
            else{
                JOptionPane.showMessageDialog(this, "Uspesno ste zapamtili podatke");
                this.dispose();
            }
            
        } catch (Exception ex) {
            System.out.println(ex.getMessage());
            System.out.println("AAA");
        }
    }//GEN-LAST:event_btnSaveActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnSave;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblError;
    private javax.swing.JLabel lblMaxBrojPoena;
    private javax.swing.JLabel lblNazivTesta;
    private javax.swing.JLabel lblSala;
    private javax.swing.JLabel lblTitle;
    private javax.swing.JTable tblRezultatPolaganja;
    // End of variables declaration//GEN-END:variables

    private void populateForm() {
        Polaganje polaganje = (Polaganje) localStorage.getItemFromHashMap("Polaganje");
        lblTitle.setText("Studenti koji polazu: " + polaganje.getNaziv());
        lblSala.setText("Sala: " + polaganje.getNazivSale());
        lblNazivTesta.setText("Test: " + polaganje.getTest().getNaziv());
        lblMaxBrojPoena.setText("Maksimalan broj poena na testu: " + polaganje.getTest().getMaxBrojPoena());
        lblError.setVisible(false);
        lblError.setText("");
    }

    private void populateTable() {
        try {
            List<Student> studenti = (List<Student>) localStorage.getItemFromHashMap("Studenti");
            Polaganje polaganje = (Polaganje) localStorage.getItemFromHashMap("Polaganje");
            
            List<RezultatPolaganja> rezultatiPolaganja = Communication.getInstance().getRezultatPolaganja();
            List<RezultatPolaganja> rezultatiStudenata = new ArrayList<>();
            
            for(Student student:studenti){
                for(RezultatPolaganja rp:rezultatiPolaganja){
                    if((Objects.equals(rp.getPolaganje().getPolaganjeId(), polaganje.getPolaganjeId())) && (Objects.equals(rp.getStudent().getId(), student.getId()))){
                        rezultatiStudenata.add(rp);
                    }
                }
            }
            
            tblRezultatPolaganja.setModel(new MyRezultatPolaganjaTableModel(rezultatiStudenata));
        } catch (Exception ex) {
            System.out.println(ex.getMessage());
        }
        
        
    }
}
